import { AxiosInstance, AxiosPromise } from "axios";
import * as API from "./types";
import { CookieJar } from "tough-cookie";
export default class SakaiAPI {
    config: API.SakaiAPIConfig;
    cookieJar: CookieJar;
    request: AxiosInstance;
    constructor(config?: API.SakaiAPIConfig);
    /**
     * Logs in with student id and password
     * @param {API.LoginRequest} params
     * @param {string} params.username
     * @param {string} params.password
     */
    login: (params: API.LoginRequest) => Promise<void>;
    /**
      * Gets announcement for a specific site
      * @param {string} siteId
      * @returns {AxiosPromise<API.SiteAnnouncementResponse>}
      */
    getSiteAnnouncement: (siteId: string) => AxiosPromise<API.SiteAnnouncementResponse>;
    /**
      * Gets all announcement for current user
      * @return {AxiosPromise<API.MyAnnouncementResponse>}
      */
    getUserAnnouncement: () => AxiosPromise<API.MyAnnouncementResponse>;
    /**
     * Gets assignments for a specific site
     * @param {string} siteId
     * @returns {AxiosPromise<API.SiteAssignmentResponse>}
     */
    getSiteAssignment: (siteId: string) => AxiosPromise<API.SiteAssignmentResponse>;
    /**
     * Gets an assignment
     * @param {string} assignmentId
     * @return {AxiosPromise<API.ItemAssignmentResponse>}
     */
    getItemAssignment: (assignmentId: string) => AxiosPromise<API.ItemAssignmentResponse>;
    /**
     * Gets all assignments for current user
     * @return {AxiosPromise<API.MyAssignmentResponse>}
     */
    getMyAssignment: () => AxiosPromise<API.MyAssignmentResponse>;
    /**
     * Gets calendar for a specific site
     * @param {string} siteId
     * @returns {AxiosPromise<API.SiteCalendarResponse>}
     */
    getSiteCalendar: (siteId: string) => AxiosPromise<API.SiteCalendarResponse>;
    /**
     * Gets all calendars for current user
     * @returns {AxiosPromise<API.MyCalendarResponse>}
     */
    getMyCalendar: () => AxiosPromise<API.MyCalendarResponse>;
    /**
     * Gets calendar event for a specific site
     * @param {API.EventCalendarRequest} params
     * @param {string} params.siteId
     * @param {string} params.eventId
     * @returns {AxiosPromise<API.EventCalendarResponse>}
     */
    getEventCalendar: (params: API.EventCalendarRequest) => AxiosPromise<API.EventCalendarResponse>;
    /**
     * Gets sites for current user
     * @returns {AxiosPromise<API.SiteResponse>}
     */
    getSite: () => AxiosPromise<API.SiteResponse>;
    /**
    * Gets content for a specific site
    * @param {string} siteId
    * @returns {AxiosPromise<API.SiteContentResponse>}
    */
    getSiteContent: (siteId: string) => AxiosPromise<API.SiteContentResponse>;
    /**
    * Gets content for current user
    * @returns {AxiosPromise<API.MyContentResponse>}
    */
    getMyContent: () => AxiosPromise<API.MyContentResponse>;
}
