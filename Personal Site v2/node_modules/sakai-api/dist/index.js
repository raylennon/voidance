"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var axios_cookiejar_support_1 = __importDefault(require("axios-cookiejar-support"));
var axios_1 = __importDefault(require("axios"));
var tough_cookie_1 = require("tough-cookie");
var SakaiAPI = /** @class */ (function () {
    function SakaiAPI(config) {
        var _this = this;
        if (config === void 0) { config = {}; }
        /**
         * Logs in with student id and password
         * @param {API.LoginRequest} params
         * @param {string} params.username
         * @param {string} params.password
         */
        this.login = function (params) { return _this.request.post("direct/session", null, {
            params: {
                _username: params.username,
                _password: params.password
            }
        }).then(function (res) {
            var cookie = res.headers["set-cookie"][0];
            _this.request.defaults.headers.Cookie = cookie;
        }); };
        /**
          * Gets announcement for a specific site
          * @param {string} siteId
          * @returns {AxiosPromise<API.SiteAnnouncementResponse>}
          */
        this.getSiteAnnouncement = function (siteId) { return _this.request.get("direct/announcement/site/" + siteId + ".json"); };
        /**
          * Gets all announcement for current user
          * @return {AxiosPromise<API.MyAnnouncementResponse>}
          */
        this.getUserAnnouncement = function () { return _this.request.get("direct/announcement/user.json"); };
        /**
         * Gets assignments for a specific site
         * @param {string} siteId
         * @returns {AxiosPromise<API.SiteAssignmentResponse>}
         */
        this.getSiteAssignment = function (siteId) { return _this.request.get("direct/assignment/site/" + siteId + ".json"); };
        /**
         * Gets an assignment
         * @param {string} assignmentId
         * @return {AxiosPromise<API.ItemAssignmentResponse>}
         */
        this.getItemAssignment = function (assignmentId) { return _this.request.get("direct/assignment/item/" + assignmentId + ".json"); };
        /**
         * Gets all assignments for current user
         * @return {AxiosPromise<API.MyAssignmentResponse>}
         */
        this.getMyAssignment = function () { return _this.request.get("direct/assignment/my.json"); };
        /**
         * Gets calendar for a specific site
         * @param {string} siteId
         * @returns {AxiosPromise<API.SiteCalendarResponse>}
         */
        this.getSiteCalendar = function (siteId) { return _this.request.get("direct/calendar/site/" + siteId + ".json"); };
        /**
         * Gets all calendars for current user
         * @returns {AxiosPromise<API.MyCalendarResponse>}
         */
        this.getMyCalendar = function () { return _this.request.get("direct/calendar/my.json"); };
        /**
         * Gets calendar event for a specific site
         * @param {API.EventCalendarRequest} params
         * @param {string} params.siteId
         * @param {string} params.eventId
         * @returns {AxiosPromise<API.EventCalendarResponse>}
         */
        this.getEventCalendar = function (params) { return _this.request.get("direct/calendar/event/" + params.siteId + "/" + params.eventId + ".json"); };
        /**
         * Gets sites for current user
         * @returns {AxiosPromise<API.SiteResponse>}
         */
        this.getSite = function () { return _this.request.get("direct/site.json"); };
        /**
        * Gets content for a specific site
        * @param {string} siteId
        * @returns {AxiosPromise<API.SiteContentResponse>}
        */
        this.getSiteContent = function (siteId) { return _this.request.get("direct/content/site/" + siteId + ".json"); };
        /**
        * Gets content for current user
        * @returns {AxiosPromise<API.MyContentResponse>}
        */
        this.getMyContent = function () { return _this.request.get("direct/content/my.json"); };
        this.config = {
            baseUrl: config.baseUrl || "https://sakai.ug.edu.gh/",
        };
        this.cookieJar = new tough_cookie_1.CookieJar();
        this.request = axios_1.default.create({
            baseURL: this.config.baseUrl,
            jar: this.cookieJar,
            withCredentials: true
        });
        axios_cookiejar_support_1.default(this.request);
    }
    return SakaiAPI;
}());
exports.default = SakaiAPI;
